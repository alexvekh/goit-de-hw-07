from airflow import DAG
from datetime import datetime
from airflow.sensors.sql import SqlSensor
from airflow.operators.mysql_operator import MySqlOperator
from airflow.operators.python import PythonOperator
from airflow.utils.trigger_rule import TriggerRule as tr
from airflow.utils.state import State

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø—Ä–∏–º—É—Å–æ–≤–æ–≥–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É DAG —è–∫ —É—Å–ø—ñ—à–Ω–æ–≥–æ
def mark_dag_success(ti, **kwargs):
    dag_run = kwargs['dag_run']
    dag_run.set_state(State.SUCCESS)

def generate_number(ti):
    number = random.randint(1, 100)
    print(f"Generated number: {number}")

    return number

# –ê—Ä–≥—É–º–µ–Ω—Ç–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –¥–ª—è DAG
default_args = {
    'owner': 'airflow',
    'start_date': datetime(2024, 8, 4, 0, 0),
}

# –ù–∞–∑–≤–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö MySQL
connection_name = "goit_mysql_db"

# 1. –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è DAG:
# default_args ‚Äî –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º, —è–∫—ñ –≤–∫–ª—é—á–∞—é—Ç—å –≤–ª–∞—Å–Ω–∏–∫–∞ DAG (owner) —ñ –¥–∞—Ç—É –ø–æ—á–∞—Ç–∫—É –≤–∏–∫–æ–Ω–∞–Ω–Ω—è (start_date);
# DAG –≤–∏–∑–Ω–∞—á–∞—î —Ä–æ–±–æ—á–∏–π –ø—Ä–æ—Ü–µ—Å –∑ —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä–æ–º 'working_with_mysql_db' –±–µ–∑ –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ–≥–æ —ñ–Ω—Ç–µ—Ä–≤–∞–ª—É –≤–∏–∫–æ–Ω–∞–Ω–Ω—è (schedule_interval=None) —Ç–∞ –∑ –≤–∏–º–∫–Ω–µ–Ω–∏–º catchup (–∑–∞–ø–æ–±—ñ–≥–∞—î –∑–∞–ø—É—Å–∫—É –ø—Ä–æ–ø—É—â–µ–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å).
#
# –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è DAG
with DAG(
        'working_with_mysql_db',
        default_args=default_args,
        schedule_interval=None,  # DAG –Ω–µ –º–∞—î –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ–≥–æ —ñ–Ω—Ç–µ—Ä–≤–∞–ª—É –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
        catchup=False,  # –í–∏–º–∫–Ω—É—Ç–∏ –∑–∞–ø—É—Å–∫ –ø—Ä–æ–ø—É—â–µ–Ω–∏—Ö –∑–∞–¥–∞—á
        tags=["vekh"]  # –¢–µ–≥–∏ –¥–ª—è –∫–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—ó DAG
) as dag:

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ö–µ–º–∏ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö (—è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î)
    create_schema = MySqlOperator(
        task_id='create_schema',
        mysql_conn_id=connection_name,
        sql="""
        CREATE DATABASE IF NOT EXISTS vekh;
        """
    )

    #–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ (—è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î)
    create_table = MySqlOperator(
        task_id='create_table',
        mysql_conn_id=connection_name,
        sql="""
        CREATE TABLE IF NOT EXISTS vekh.games (
        `id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `medal_type` VARCHAR(6),
        `count` INT,
        `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP
        );
        """
    )

    #–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ (—è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î)
    choice_medal = PythonOperator(
        task_id='choice_medal',
        medal_types=['Bronze', 'Silver', 'Gold']
        random_medal = random.choice(medal_types)

    mysql_conn_id=connection_name,
        sql="""
        CREATE TABLE IF NOT EXISTS vekh.games (
        `id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `medal_type` VARCHAR(6),
        `count` INT,
        `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP
        );
        """
    )




    #–ó–æ–ø–æ–≤–Ω–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ
    insert_table = MySqlOperator(
        task_id='insert_table',
        mysql_conn_id=connection_name,
        sql="""
        CREATE TABLE IF NOT EXISTS vekh.games (
        `id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `medal_type` VARCHAR(6),
        `count` INT,
        `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP
        );
        """
    )

    # –°–µ–Ω—Å–æ—Ä –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ä—è–¥–∫—ñ–≤ —É —Ç–∞–±–ª–∏—Ü—è—Ö `oleksiy.games` —ñ `olympic_dataset.games`
    check_for_data = SqlSensor(
        task_id='check_if_counts_same',
        conn_id=connection_name,
        sql="""WITH count_in_copy AS (
                select COUNT(*) nrows_copy from oleksiy.games
                ),
                count_in_original AS (
                select COUNT(*) nrows_original from olympic_dataset.games
                )
               SELECT nrows_copy <> nrows_original FROM count_in_copy
               CROSS JOIN count_in_original
               ;""",
        mode='poke',  # –†–µ–∂–∏–º –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏: –ø–µ—Ä—ñ–æ–¥–∏—á–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —É–º–æ–≤–∏
        poke_interval=5,  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–∂–Ω—ñ 5 —Å–µ–∫—É–Ω–¥
        timeout=6,  # –¢–∞–π–º-–∞—É—Ç –ø—ñ—Å–ª—è 6 —Å–µ–∫—É–Ω–¥ (1 –ø–æ–≤—Ç–æ—Ä–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞)
    )

    # 4. –°–µ–Ω—Å–æ—Ä check_for_data:
    # # –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î SqlSensor –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏, —á–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—è–¥–∫—ñ–≤ —É —Ç–∞–±–ª–∏—Ü—ñ oleksiy.games –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ä—è–¥–∫—ñ–≤ —É —Ç–∞–±–ª–∏—Ü—ñ olympic_dataset.games, —Ç–æ–±—Ç–æ –≤–∏–∫–æ–Ω—É—î SQL-–∑–∞–ø–∏—Ç, —è–∫–∏–π –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—è–¥–∫—ñ–≤ —É —Ü–∏—Ö –¥–≤–æ—Ö —Ç–∞–±–ª–∏—Ü—è—Ö –Ω–µ –∑–±—ñ–≥–∞—î—Ç—å—Å—è (nrows_copy <> nrows_original);
    # –ø—Ä–∞—Ü—é—î –≤ —Ä–µ–∂–∏–º—ñ poke, –ø–µ—Ä–µ–≤—ñ—Ä—è—é—á–∏ —É–º–æ–≤—É –∫–æ–∂–Ω—ñ 5 —Å–µ–∫—É–Ω–¥ –ø—Ä–æ—Ç—è–≥–æ–º –∑–∞–≥–∞–ª—å–Ω–æ–≥–æ —á–∞—Å—É 6 —Å–µ–∫—É–Ω–¥. –Ø–∫—â–æ —É–º–æ–≤–∞ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è (—Ç–æ–±—Ç–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—è–¥–∫—ñ–≤ –Ω–µ –∑–±—ñ–≥–∞—î—Ç—å—Å—è), —Å–µ–Ω—Å–æ—Ä –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è.
    #  üëì –£ —Ä–µ–∂–∏–º—ñ poke —Å–µ–Ω—Å–æ—Ä –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –∞–∫—Ç–∏–≤–Ω–∏–º –ø—Ä–æ—Ç—è–≥–æ–º —É—Å—å–æ–≥–æ —á–∞—Å—É –≤–∏–∫–æ–Ω–∞–Ω–Ω—è. –°–µ–Ω—Å–æ—Ä –∑–∞–π–º–∞—î –æ–¥–∏–Ω —Å–ª–æ—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è (worker slot) –ø—Ä–æ—Ç—è–≥–æ–º —É—Å—å–æ–≥–æ —á–∞—Å—É —Å–≤–æ—î—ó —Ä–æ–±–æ—Ç–∏, —â–æ –º–æ–∂–µ –±—É—Ç–∏ —Ä–µ—Å—É—Ä—Å–æ–º—ñ—Å—Ç–∫–∏–º –¥–ª—è —Ç—Ä–∏–≤–∞–ª–∏—Ö –∑–∞–≤–¥–∞–Ω—å.
    # –ü—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è –∑–∞–≤–¥–∞–Ω—å, –¥–µ —É–º–æ–≤–∞ –º–æ–∂–µ –≤–∏–∫–æ–Ω–∞—Ç–∏—Å—è —á–µ—Ä–µ–∑ –∫–æ—Ä–æ—Ç–∫–∏–π –ø–µ—Ä—ñ–æ–¥ —á–∞—Å—É –π –ø–æ—Ç—Ä—ñ–±–Ω–æ —à–≤–∏–¥–∫–æ —Ä–µ–∞–≥—É–≤–∞—Ç–∏ –Ω–∞ –∑–º—ñ–Ω—É —Å—Ç–∞–Ω—É.
    #
    # –£ —Ä–µ–∂–∏–º—ñ reschedule —Å–µ–Ω—Å–æ—Ä –ø—Ä–∞—Ü—é—î —Å—Ö–æ–∂–∏–º —á–∏–Ω–æ–º, –∞–ª–µ –∑–∞–º—ñ—Å—Ç—å —Ç–æ–≥–æ, —â–æ–± –∑–∞–ª–∏—à–∞—Ç–∏—Å—è –∞–∫—Ç–∏–≤–Ω–∏–º —ñ —á–µ–∫–∞—Ç–∏, –≤—ñ–Ω –≤—ñ–¥–∫–ª–∞–¥–∞—î—Ç—å—Å—è (rescheduled) –º—ñ–∂ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞–º–∏ –π –Ω–µ –∑–∞–π–º–∞—î —Å–ª–æ—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è, –ø–æ–∫–∏ —É–º–æ–≤–∞ –Ω–µ –±—É–¥–µ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–∞ –∑–Ω–æ–≤—É.
    # –¢–∞–∫–∏–º —á–∏–Ω–æ–º, —Ä–µ–∂–∏–º reschedule –µ–∫–æ–Ω–æ–º–∏—Ç—å —Ä–µ—Å—É—Ä—Å–∏, –∑–º–µ–Ω—à—É—î –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞ —Å–∏—Å—Ç–µ–º—É –π –¥–æ–∑–≤–æ–ª—è—î –±—ñ–ª—å—à –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ä–µ—Å—É—Ä—Å–∏ Airflow.
    # –ü—ñ–¥—Ö–æ–¥–∏—Ç—å –¥–ª—è –∑–∞–≤–¥–∞–Ω—å, –¥–µ –ø–µ—Ä–µ–¥–±–∞—á–∞—î—Ç—å—Å—è —Ç—Ä–∏–≤–∞–ª–µ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –Ω–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —É–º–æ–≤–∏.
    #

    # –ó–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —É —Ç–∞–±–ª–∏—Ü—ñ `oleksiy.games`
    refresh_data = MySqlOperator(
        task_id='refresh',
        mysql_conn_id=connection_name,
        sql="""
            TRUNCATE oleksiy.games;  # –û—á–∏—â–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ
            INSERT INTO oleksiy.games SELECT * FROM olympic_dataset.games;  # –í—Å—Ç–∞–≤–∫–∞ –¥–∞–Ω–∏—Ö –∑ —ñ–Ω—à–æ—ó —Ç–∞–±–ª–∏—Ü—ñ
        """,
    )
    # 5. –ó–∞–≤–¥–∞–Ω–Ω—è refresh_data –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î MySqlOperator –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è (TRUNCATE) —Ç–∞–±–ª–∏—Ü—ñ oleksiy.games —ñ –≤—Å—Ç–∞–≤–∫–∏ –≤ –Ω–µ—ó –¥–∞–Ω–∏—Ö –∑ —Ç–∞–±–ª–∏—Ü—ñ olympic_dataset.games ‚Äî —Ü–µ –∑–∞–≤–¥–∞–Ω–Ω—è –æ–Ω–æ–≤–ª—é—î –¥–∞–Ω—ñ –≤ —Ç–∞–±–ª–∏—Ü—ñ oleksiy.games;

    # –ó–∞–≤–¥–∞–Ω–Ω—è –¥–ª—è –ø—Ä–∏–º—É—Å–æ–≤–æ–≥–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É DAG —è–∫ —É—Å–ø—ñ—à–Ω–æ–≥–æ –≤ —Ä–∞–∑—ñ –Ω–µ–≤–¥–∞—á—ñ
    mark_success_task = PythonOperator(
        task_id='mark_success',
        trigger_rule=tr.ONE_FAILED,  # –í–∏–∫–æ–Ω–∞—Ç–∏, —è–∫—â–æ —Ö–æ—á–∞ –± –æ–¥–Ω–µ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—è –Ω–µ–≤–¥–∞—á–µ—é
        python_callable=mark_dag_success,
        provide_context=True,  # –ù–∞–¥–∞—Ç–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –∑–∞–≤–¥–∞–Ω–Ω—è —É –≤–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó
        dag=dag,
    )

    # 6. –ó–∞–≤–¥–∞–Ω–Ω—è mark_success_task
    #
    # –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î PythonOperator, —â–æ–± –ø—Ä–∏–º—É—Å–æ–≤–æ –≤—Å—Ç–∞–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å DAG —è–∫ —É—Å–ø—ñ—à–Ω–∏–π —É –≤–∏–ø–∞–¥–∫—É, —è–∫—â–æ —Ö–æ—á–∞ –± –æ–¥–Ω–µ –ø–æ–ø–µ—Ä–µ–¥–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—è –Ω–µ–≤–¥–∞—á–µ—é.
    # üëì –ë–µ–∑ —Ü—å–æ–≥–æ DAG –±—É–¥–µ –ø–æ–∑–Ω–∞—á–µ–Ω–æ —á–µ—Ä–≤–æ–Ω–∏–º —è–∫ ¬´FAILED¬ª, —á–µ—Ä–µ–∑ —Ç–µ —â–æ SqlSensor –ø—Ä–æ–≤–∞–ª–∏—Ç—å—Å—è, —è–∫—â–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—è–¥–∫—ñ–≤ –≤ –æ–±–æ—Ö —Ç–∞–±–ª–∏—Ü—è—Ö –±—É–¥–µ –æ–¥–Ω–∞–∫–æ–≤–æ—é. –ê–ª–µ –¥–ª—è –Ω–∞—Å —Ü–µ –ø–µ—Ä–µ–¥–±–∞—á—É–≤–∞–Ω–∏–π —Ä–æ–∑–≤–∏—Ç–æ–∫ –ø–æ–¥—ñ–π. –¢–æ–º—É –º–∏ —Ö–æ—á–µ–º–æ –≤—Å–µ –∂, —â–æ–± —Ü–µ–π –∑–∞–ø—É—Å–∫ –±—É–≤ –ø–æ–∑–Ω–∞—á–µ–Ω–∏–π –∑–µ–ª–µ–Ω–∏–º, —è–∫—â–æ –≤—Å–µ —Å–ø—Ä–∞—Ü—é–≤–∞–ª–æ.
    # trigger_rule=tr.ONE_FAILED –æ–∑–Ω–∞—á–∞—î, —â–æ —Ü–µ –∑–∞–≤–¥–∞–Ω–Ω—è –±—É–¥–µ –≤–∏–∫–æ–Ω–∞–Ω–æ, —è–∫—â–æ —Ö–æ—á–∞ –± –æ–¥–Ω–µ –∑ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö –∑–∞–≤–¥–∞–Ω—å –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—è –∑ –ø–æ–º–∏–ª–∫–æ—é (SqlSensor);
    # mark_dag_success ‚Äî —Ñ—É–Ω–∫—Ü—ñ—è Python, —è–∫–∞ –∑–º—ñ–Ω—é—î —Å—Ç–∞–Ω DAG –Ω–∞ SUCCESS.

    # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π –º—ñ–∂ –∑–∞–≤–¥–∞–Ω–Ω—è–º–∏
    create_schema >> create_table >> check_for_data >> refresh_data
    check_for_data >> mark_success_task



